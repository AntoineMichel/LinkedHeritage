

- implements other http verb : 
-- like DEL for deleting a graph
-- like get for get a graph
-- like ... for modifications

- clean javascripts in visualisation folder, just keep needed

== history management

* Ontology history management : 
** Actually - not showed on the UI - each modification is save and store in an history ontology file.
** This done under the hood, but future will give the user access to it and allow him : 
*** To see modifications done by others
*** Revert modifications 
*** Create new versions of the thesaurus from a set of modification.
** Another good of this history management is that just the modification done is send to the server.
*** So, it's fast, and if the server send modifications to others connected users... many users can colaboratively edit a thesaurus and see changes in "real time".
*** Great feature no ? Comming soon ! :) 

== Graph loading ==

* deal with error message "ex : graph don't exist" : http://localhost/lh/versions/dev/lh/visualisation/mapping/?uri=http://cuture-heritage.org/thesaurus/florent/testFullCSVimport
** 404

* build a sexy and moving (loader : please wait while data loading)

== For alpha 0.0.1 ==

* define and create the js workflow for getting the history file
** the pb is related to the fact to only get "metadata" of the graph... because server side don't manage changes order

* create from scratch


integration into stanbol pages

improve local toolbox display
cleaning old code

* solve bug about uncolorization of words

* load functionnality : display a load object when needed

* check integrity of mapping : 
** verify the check and allow modifications when mapping is not ok :
** checking done by import/lh.import.js/addSubmitEvent();

* create a download with all languages and flag for a nice drop down

* apparement la modification de concepts lorsque 2 graph sont affichés ne fonctionne pas en direct live...

== Bug existing graph loading ==

* use branch existing-graph-loading


= voir quelle possibilité pour définir le data comme le triple
==> rewrite de la fonction "children" avec a.s = b.o


== Visualisation ==

add mouse rool event to deal with scrollbar

manage links displays for link in the same graph


== Form ==

=== Metadata informations ===

* language : faire de la multi-selection

===  CSV import ===

* create a nice CSS for drop down list (look at rd-intranet)

* better integration of the configuration zone with the rest of the tab

* do ckeck for well filled configuration before import

* tutorial on CSV export from excel : 
** take care of encoding issues.

== After import ==

* for answer after skosification
returns 201 created with Location header pointing to the job (say
/jobs/1234) and HTML content that contains <a rel="job"
href="/jobs/1234"> (or JSON equivalent if that's useful)


* URLencode all informations used to create the thesaurus and concept uri


== Javascript ==


* use "real" triple implementation : like this : https://github.com/IKS/rdfQuery [1]
** the main issue here is that this implementation don't accept json-ld (turtle and json are okay)
** but this one https://github.com/digitalbazaar/jsonld.js is a js implementation of json-ld
*** but really lack of documentation and don't see for now how to get triples from here.

[1] the main interresting part is : http://code.google.com/p/rdfquery/wiki/RdfPlugin
Note : the git repository is a mirror of this google code, seem to be updated from git to gcode

* get serialisation
** The dump() method can take an options argument which is an object with the following properties:
** format: the format of the dump as a mime type. Possible values are 'application/json' (the default) and 'application/rdf+xml'.
    namespaces: an object defining the namespace bindings that will be used in the dump. This is only relevant for XML-based formats. The prefix rdf is always bound to the RDF syntax namespace. 
** For XML-based formats, the dump() method actually returns a DOM document rather than a string. 

==== bug in rdfqueyr ====

* rdf is normally a reserved curie (find this in doc).
** create triple with rdf:type cause error curi if rdf ns not defined :
** ex : 
///RDF management
		var hns = {
			    namespaces: { h: 'http://www.culture-terminology.org/ontoHisto/',
			    }
		  };

var changeSubject = $.rdf.resource("<urn:change-DO-DYN-ID>");
		var rdfChanges = $.rdf.databank([
		                '<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404> .',
		                '<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg> .'
		              ], 
		              { base: 'http://www.example.org/',
		                namespaces: { 
		                  dc: 'http://purl.org/dc/elements/1.1/', 
		                  foaf: 'http://xmlns.com/foaf/0.1/' } });
		
		rdfChanges.add($.rdf.triple(changeSubject,"rdf:type","h:change",hns));

* and if rdf defined in namespace, non valid rdf file is generated : 
///RDF management
		var hns = {
			    namespaces: { h: 'http://www.culture-terminology.org/ontoHisto/',
			    	rdf:"http://www.w3.org/1999/02/22-rdf-syntax-ns#"
			    }
		  };

var changeSubject = $.rdf.resource("<urn:change-DO-DYN-ID>");
		var rdfChanges = $.rdf.databank([
		                '<photo1.jpg> dc:creator <http://www.blogger.com/profile/1109404> .',
		                '<http://www.blogger.com/profile/1109404> foaf:img <photo1.jpg> .'
		              ], 
		              { base: 'http://www.example.org/',
		                namespaces: { 
		                  dc: 'http://purl.org/dc/elements/1.1/', 
		                  foaf: 'http://xmlns.com/foaf/0.1/' } });
		
		rdfChanges.add($.rdf.triple(changeSubject,"rdf:type","h:change",hns));


=== Vie.js ===
* about vie.js
** document for 1.0.0 : http://viejs.org/docs/1.0.0/
** website http://viejs.org
** deals with rdfa in html page, don't put rda in page.
